import { useSelector } from "react-redux";
import { useEffect, useState } from "react";
import styles from './InformationBlock.module.css';

export function InformationBlock() {
  const stepsData = useSelector(state => state.changebleLifeData.steps);
  const notificationsData = useSelector(state => state.changebleLifeData.notifications);
  const heartbeatData = useSelector(state => state.changebleLifeData.heartbeat);
  const currentTimestamp = useSelector(state => state.time.time);

  const [currentSteps, setCurrentSteps] = useState("–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö");
  const [currentNotif, setCurrentNotif] = useState("–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö");
  const [currentBeat, setCurrentBeat] = useState("–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö");

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∏—Å–∫–∞ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ –≤—Ä–µ–º–µ–Ω–∏
  const findLatestBeforeTimestamp = (arr, timestamp) => {
    if (!Array.isArray(arr) || arr.length === 0) return null;

    const targetTime = new Date(timestamp).getTime();

    // –§–∏–ª—å—Ç—Ä—É–µ–º —Ç–µ —ç–ª–µ–º–µ–Ω—Ç—ã, –∫–æ—Ç–æ—Ä—ã–µ –º–µ–Ω—å—à–µ –∏–ª–∏ —Ä–∞–≤–Ω—ã —Ü–µ–ª–µ–≤–æ–º—É –≤—Ä–µ–º–µ–Ω–∏
    const filtered = arr.filter(item => new Date(item.timestamp).getTime() <= targetTime);

    // –ï—Å–ª–∏ –µ—Å—Ç—å –ø–æ–¥—Ö–æ–¥—è—â–∏–µ –∑–∞–ø–∏—Å–∏, –±–µ—Ä–µ–º —Ç—É, —á—Ç–æ –±–ª–∏–∂–µ –≤—Å–µ–≥–æ –∫ —Ü–µ–ª–µ–≤–æ–º—É –≤—Ä–µ–º–µ–Ω–∏
    if (filtered.length > 0) {
      return filtered.reduce((latest, item) =>
        new Date(item.timestamp).getTime() > new Date(latest.timestamp).getTime() ? item : latest
      );
    }

    return null; // –ù–µ—Ç –ø–æ–¥—Ö–æ–¥—è—â–∏—Ö –¥–∞–Ω–Ω—ã—Ö
  };

  useEffect(() => {
    const currentStepData = findLatestBeforeTimestamp(stepsData, currentTimestamp);
    const currentNotifData = findLatestBeforeTimestamp(notificationsData, currentTimestamp);
    const currentBeatData = findLatestBeforeTimestamp(heartbeatData, currentTimestamp);

    setCurrentSteps(currentStepData ? currentStepData.value : "–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö");
    setCurrentNotif(currentNotifData ? extractMessage(currentNotifData.value) : "–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö");
    setCurrentBeat(currentBeatData ? currentBeatData.value : "–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö");
  }, [currentTimestamp, stepsData, notificationsData, heartbeatData]);

  // –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —á–∏—Å–ª–æ–≤—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π
  const formatValue = (value) => {
    if (typeof value === "number") {
      return value.toLocaleString();
    }
    return value;
  };

  const extractMessage = (value) => {
    if (!value) return "–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö";
    const messageMatch = value.match(/message:([^;]*)/);
    return messageMatch ? messageMatch[1] : value;
  };
  

  return (
    <div className={styles.container}>
      <div className={styles.headerDataContainer}>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è</div>
      <div className={styles.cardsWrapper}>
        {/* –ö–∞—Ä—Ç–æ—á–∫–∞ —Å —à–∞–≥–∞–º–∏ */}
        <div className={styles.card}>
          <p className={styles.cardTitle}>üë£ –®–∞–≥–∏</p>
          <p className={styles.cardValue}>
            {formatValue(currentSteps)}
          </p>
        </div>

        {/* –ö–∞—Ä—Ç–æ—á–∫–∞ —Å –ø—É–ª—å—Å–æ–º */}
        <div className={styles.card}>
          <p className={styles.cardTitle}>üíì –ü—É–ª—å—Å</p>
          <p className={styles.cardValue}>
            {typeof currentBeat === "number" ? `${currentBeat} —É–¥/–º–∏–Ω` : currentBeat}
          </p>
        </div>

        {/* –ö–∞—Ä—Ç–æ—á–∫–∞ —Å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ–º */}
        <div className={styles.card}>
          <p className={styles.cardTitle}>üîî –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ</p>
          <p className={styles.cardValue}>
            {formatValue(currentNotif)}
          </p>
        </div>
      </div>
    </div>
  );
}
